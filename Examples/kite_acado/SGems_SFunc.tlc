%% File : SGems_SFunc.tlc
%% Created: Fri Oct 12 15:34:22 2012
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "SGems_SFunc.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  SGems_SFunc "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
    
  %if IsModelReferenceSimTarget() || CodeFormat=="S-Function"
    %assign hFileName = "SGems_SFunc_accel_wrapper"
    %assign hFileNameMacro = FEVAL("upper", hFileName)
    %openfile hFile = "%<hFileName>.h"
    %selectfile hFile
    #ifndef _%<hFileNameMacro>_H_
    #define _%<hFileNameMacro>_H_

    #include "tmwtypes.h"
    extern void SGems_SFunc_Outputs_wrapper_accel(const void *xref, void *__xrefBUS,                          const void *x, void *__xBUS,
                          void *u, void *__uBUS);
    #endif
    %closefile hFile

    %assign cFileName = "SGems_SFunc_accel_wrapper"
    %openfile cFile = "%<cFileName>.c"
    %selectfile cFile
    #include <string.h>
    #include "tmwtypes.h"
    #include "SGems_SFunc_bus.h"
	void SGems_SFunc_Outputs_wrapper_accel(const void *xref, void *__xrefBUS,                          const void *x, void *__xBUS,
                          void *u, void *__uBUS){
	%assign dTypeId = LibBlockInputSignalDataTypeId(0)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(xref_bus*) __xrefBUS)", "(char *)xref", 0)>

	%assign dTypeId = LibBlockInputSignalDataTypeId(1)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(x_bus*) __xBUS)", "(char *)x", 1)>
	SGems_SFunc_Outputs_wrapper((xref_bus *) __xrefBUS, (x_bus *) __xBUS,
                          (u_bus *) __uBUS);

	%assign dTypeId = LibBlockOutputSignalDataTypeId(0)
    %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)u", "(*(u_bus*) __uBUS)", 0)>
}

   %closefile cFile

    %<LibAddToCommonIncludes("%<hFileName>.h")>
    %<LibAddToModelSources("%<cFileName>")>

  %else
  %openfile externs
    
  extern void SGems_SFunc_Outputs_wrapper(const xref_bus *xref,
                          const x_bus *x,
                          u_bus *u);
  %closefile externs
  %<LibCacheExtern(externs)>

 %endif
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  
  %if IsModelReferenceSimTarget() || CodeFormat=="S-Function"
    %assign u0BUS_ptr = LibBlockDWorkAddr(u0BUS, "", "", 0)
    %assign u1BUS_ptr = LibBlockDWorkAddr(u1BUS, "", "", 0)
    %assign y0BUS_ptr = LibBlockDWorkAddr(y0BUS, "", "", 0)
	SGems_SFunc_Outputs_wrapper_accel(%<pu0>, %<u0BUS_ptr>, %<pu1>, %<u1BUS_ptr>, %<py0>, %<y0BUS_ptr> );
  %else
	SGems_SFunc_Outputs_wrapper(%<pu0>, %<pu1>, %<py0> );
  %endif
  %%
%endfunction


%% [EOF] SGems_SFunc.tlc





