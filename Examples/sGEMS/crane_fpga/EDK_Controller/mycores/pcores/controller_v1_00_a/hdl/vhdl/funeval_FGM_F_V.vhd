-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2012.2
-- Copyright (C) 2012 Xilinx Inc. All rights reserved.
-- 
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_signed.all;


entity funeval_FGM_F_V_core  is
    generic(READ_PORT_COUNT  : NATURAL := 1;
            WRITE_PORT_COUNT : NATURAL := 1;
            DATA_WIDTH       : NATURAL := 8;
            ADDRESS_WIDTH    : NATURAL := 8;
            WORD_COUNT       : NATURAL := 256);
    port ( ra     : in  std_logic_vector(READ_PORT_COUNT*ADDRESS_WIDTH-1 downto 0);
           ce     : in  std_logic_vector(READ_PORT_COUNT-1 downto 0);
           reset    : in  std_logic;
           clk    : in  std_logic;
           q      : out std_logic_vector(READ_PORT_COUNT*DATA_WIDTH-1 downto 0));
end entity;


architecture rtl of funeval_FGM_F_V_core is

type read_address_type is array (0 to READ_PORT_COUNT-1) of std_logic_vector(ADDRESS_WIDTH-1 downto 0);
type ram_type is array (0 to WORD_COUNT-1) of std_logic_vector(DATA_WIDTH-1 downto 0);
signal mem: ram_type := ( 
    0 => "0000011010101111", 1 => "0000000000000000", 2 => "1111110000000010", 
    3 => "0000000000000000", 4 => "1111011100001111", 5 => "1111100110111011", 
    6 => "0000000100110010", 7 => "0000000000000000", 8 => "1111100101010001", 
    9 => "0000000000000000", 10 => "0000001101110111", 11 => "0000000000000000", 
    12 => "0000101011101000", 13 => "0000010111000110", 14 => "1111111011011001", 
    15 => "0000000000000000", 16 => "0000000010101100", 17 => "0000000000000000", 
    18 => "0000011010111100", 19 => "0000000000000000", 20 => "0000000000110000", 
    21 to 23=> "0000000000000000", 24 => "0000000011100111", 25 => "0000000000000000", 
    26 => "1111100101000100", 27 => "0000000000000000", 28 => "1111111110111011", 
    29 to 31=> "0000000000000000", 32 => "1111111100011101", 33 => "0000000010101101", 
    34 => "1111100101010001", 35 => "0000000000000000", 36 => "0000001111111110", 
    37 => "0000000000000000", 38 => "0000100011110001", 39 => "0000011001000101", 
    40 => "1111111011001110", 41 => "0000000000000000", 42 => "0000011010101111", 
    43 => "0000000000000000", 44 => "1111110010001001", 45 => "0000000000000000", 
    46 => "1111010100011000", 47 => "1111101000111010", 48 => "0000000100100111", 
    49 => "0000000000000000", 50 => "0000000010101100", 51 => "0000000000000000", 
    52 => "1111100101000100", 53 => "0000000000000000", 54 => "1111111111010000", 
    55 to 57=> "0000000000000000", 58 => "1111111100011001", 59 => "0000000000000000", 
    60 => "0000011010111100", 61 => "0000000000000000", 62 => "0000000001000101", 
    63 to 65=> "0000000000000000", 66 => "0000000011100011", 67 => "0000000010101101", 
    68 => "0000011010011000", 69 => "0000000000000000", 70 => "1111101111111101", 
    71 => "0000000000000000", 72 => "1111011110011000", 73 => "1111100110111010", 
    74 => "0000000100101111", 75 => "0000000000000000", 76 => "1111100101101000", 
    77 => "0000000000000000", 78 => "0000001110001001", 79 => "0000000000000000", 
    80 => "0000101001100001", 81 => "0000010111001101", 82 => "1111111011011011", 
    83 => "0000000000000000", 84 => "0000000010101101", 85 => "0000000000000000", 
    86 => "0000011010101101", 87 => "0000000000000000", 88 => "0000000000101110", 
    89 to 91=> "0000000000000000", 92 => "0000000011100101", 93 => "0000000000000000", 
    94 => "1111100101010011", 95 => "0000000000000000", 96 => "1111111111000001", 
    97 to 99=> "0000000000000000", 100 => "1111111100011110", 101 => "0000000010101110", 
    102 => "1111100101101000", 103 => "0000000000000000", 104 => "0000010000000011", 
    105 => "0000000000000000", 106 => "0000100001101000", 107 => "0000011001000110", 
    108 => "1111111011010001", 109 => "0000000000000000", 110 => "0000011010011000", 
    111 => "0000000000000000", 112 => "1111110001110111", 113 => "0000000000000000", 
    114 => "1111010110011111", 115 => "1111101000110011", 116 => "0000000100100101", 
    117 => "0000000000000000", 118 => "0000000010101101", 119 => "0000000000000000", 
    120 => "1111100101010011", 121 => "0000000000000000", 122 => "1111111111010010", 
    123 to 125=> "0000000000000000", 126 => "1111111100011011", 127 => "0000000000000000", 
    128 => "0000011010101101", 129 => "0000000000000000", 130 => "0000000000111111", 
    131 to 133=> "0000000000000000", 134 => "0000000011100010", 135 => "0000000010101110", 
    136 => "0000011010000001", 137 => "0000000000000000", 138 => "1111101111111010", 
    139 => "0000000000000000", 140 => "1111100000100001", 141 => "1111100110111011", 
    142 => "0000000100101101", 143 => "0000000000000000", 144 => "1111100101111111", 
    145 => "0000000000000000", 146 => "0000001110011010", 147 => "0000000000000000", 
    148 => "0000100111011001", 149 => "0000010111010100", 150 => "1111111011011100", 
    151 => "0000000000000000", 152 => "0000000010101110", 153 => "0000000000000000", 
    154 => "0000011010011110", 155 => "0000000000000000", 156 => "0000000000101100", 
    157 to 159=> "0000000000000000", 160 => "0000000011100100", 161 => "0000000000000000", 
    162 => "1111100101100010", 163 => "0000000000000000", 164 => "1111111111000110", 
    165 to 167=> "0000000000000000", 168 => "1111111100011111", 169 => "0000000010101111", 
    170 => "1111100101111111", 171 => "0000000000000000", 172 => "0000010000000110", 
    173 => "0000000000000000", 174 => "0000011111011111", 175 => "0000011001000101", 
    176 => "1111111011010011", 177 => "0000000000000000", 178 => "0000011010000001", 
    179 => "0000000000000000", 180 => "1111110001100110", 181 => "0000000000000000", 
    182 => "1111011000100111", 183 => "1111101000101100", 184 => "0000000100100100", 
    185 => "0000000000000000", 186 => "0000000010101110", 187 => "0000000000000000", 
    188 => "1111100101100010", 189 => "0000000000000000", 190 => "1111111111010100", 
    191 to 193=> "0000000000000000", 194 => "1111111100011100", 195 => "0000000000000000", 
    196 => "0000011010011110", 197 => "0000000000000000", 198 => "0000000000111010", 
    199 to 201=> "0000000000000000", 202 => "0000000011100001", 203 => "0000000010101111", 
    204 => "0000011001101011", 205 => "0000000000000000", 206 => "1111101111111001", 
    207 => "0000000000000000", 208 => "1111100010101011", 209 => "1111100110111100", 
    210 => "0000000100101010", 211 => "0000000000000000", 212 => "1111100110010101", 
    213 => "0000000000000000", 214 => "0000001110101010", 215 => "0000000000000000", 
    216 => "0000100101010001", 217 => "0000010111011001", 218 => "1111111011011110", 
    219 => "0000000000000000", 220 => "0000000010101110", 221 => "0000000000000000", 
    222 => "0000011010001110", 223 => "0000000000000000", 224 => "0000000000101011", 
    225 to 227=> "0000000000000000", 228 => "0000000011100011", 229 => "0000000000000000", 
    230 => "1111100101110010", 231 => "0000000000000000", 232 => "1111111111001011", 
    233 to 235=> "0000000000000000", 236 => "1111111100100001", 237 => "0000000010101111", 
    238 => "1111100110010101", 239 => "0000000000000000", 240 => "0000010000000111", 
    241 => "0000000000000000", 242 => "0000011101010101", 243 => "0000011001000100", 
    244 => "1111111011010110", 245 => "0000000000000000", 246 => "0000011001101011", 
    247 => "0000000000000000", 248 => "1111110001010110", 249 => "0000000000000000", 
    250 => "1111011010101111", 251 => "1111101000100111", 252 => "0000000100100010", 
    253 => "0000000000000000", 254 => "0000000010101110", 255 => "0000000000000000", 
    256 => "1111100101110010", 257 => "0000000000000000", 258 => "1111111111010101", 
    259 to 261=> "0000000000000000", 262 => "1111111100011101", 263 => "0000000000000000", 
    264 => "0000011010001110", 265 => "0000000000000000", 266 => "0000000000110101", 
    267 to 269=> "0000000000000000", 270 => "0000000011011111", 271 => "0000000010101111", 
    272 => "0000011001010100", 273 => "0000000000000000", 274 => "1111101111111010", 
    275 => "0000000000000000", 276 => "1111100100110101", 277 => "1111100110111111", 
    278 => "0000000100100111", 279 => "0000000000000000", 280 => "1111100110101100", 
    281 => "0000000000000000", 282 => "0000001110110111", 283 => "0000000000000000", 
    284 => "0000100011000111", 285 => "0000010111011101", 286 => "1111111011100000", 
    287 => "0000000000000000", 288 => "0000000010101111", 289 => "0000000000000000", 
    290 => "0000011001111111", 291 => "0000000000000000", 292 => "0000000000101010", 
    293 to 295=> "0000000000000000", 296 => "0000000011100001", 297 => "0000000000000000", 
    298 => "1111100110000001", 299 => "0000000000000000", 300 => "1111111111010000", 
    301 to 303=> "0000000000000000", 304 => "1111111100100010", 305 => "0000000010110000", 
    306 => "1111100110101100", 307 => "0000000000000000", 308 => "0000010000000110", 
    309 => "0000000000000000", 310 => "0000011011001011", 311 => "0000011001000001", 
    312 => "1111111011011001", 313 => "0000000000000000", 314 => "0000011001010100", 
    315 => "0000000000000000", 316 => "1111110001001001", 317 => "0000000000000000", 
    318 => "1111011100111001", 319 => "1111101000100011", 320 => "0000000100100000", 
    321 => "0000000000000000", 322 => "0000000010101111", 323 => "0000000000000000", 
    324 => "1111100110000001", 325 => "0000000000000000", 326 => "1111111111010110", 
    327 to 329=> "0000000000000000", 330 => "1111111100011111", 331 => "0000000000000000", 
    332 => "0000011001111111", 333 => "0000000000000000", 334 => "0000000000110000", 
    335 to 337=> "0000000000000000", 338 => "0000000011011110", 339 => "0000000010110000", 
    340 => "0000000010101011", 341 => "0000000000000000", 342 => "1111111110011010", 
    343 => "0000000000000000", 344 => "1111111100011100", 345 => "1111111101100000", 
    346 => "0000000000011110", 347 => "0000000000000000", 348 => "1111111101010101", 
    349 => "0000000000000000", 350 => "0000000001011000", 351 => "0000000000000000", 
    352 => "0000000100010111", 353 => "0000000010010011", 354 => "1111111111100011", 
    355 => "0000000000000000", 356 => "0100001101111001", 357 => "0000000000000000", 
    358 => "0000000010101100", 359 => "0000000000000000", 360 => "0000000000000100", 
    361 to 363=> "0000000000000000", 364 => "0000000000010111", 365 => "0000000000000000", 
    366 => "1111111101010100", 367 => "0000000000000000", 368 => "1111111111111010", 
    369 to 371=> "0000000000000000", 372 => "1111111111101010", 373 => "0100001111010101", 
    374 => "1111111101010101", 375 => "0000000000000000", 376 => "0000000001100110", 
    377 => "0000000000000000", 378 => "0000000011100100", 379 => "0000000010100000", 
    380 => "1111111111100010", 381 => "0000000000000000", 382 => "0000000010101011", 
    383 => "0000000000000000", 384 => "1111111110101000", 385 => "0000000000000000", 
    386 => "1111111011101001", 387 => "1111111101101101", 388 => "0000000000011101", 
    389 => "0000000000000000", 390 => "0100001101111001", 391 => "0000000000000000", 
    392 => "1111111101010100", 393 => "0000000000000000", 394 => "1111111111111100", 
    395 to 397=> "0000000000000000", 398 => "1111111111101001", 399 => "0000000000000000", 
    400 => "0000000010101100", 401 => "0000000000000000", 402 => "0000000000000110", 
    403 to 405=> "0000000000000000", 406 => "0000000000010110", 407 => "0100001111010101", 
    408 => "0000000011110100", 409 => "0000000000000000", 410 => "1111111101101101", 
    411 => "0000000000000000", 412 => "1111111011000001", 413 => "1111111100011010", 
    414 => "0000000000101011", 415 => "0000000000000000", 416 => "1111111100001100", 
    417 => "0000000000000000", 418 => "0000000010000000", 419 => "0000000000000000", 
    420 => "0000000110000111", 421 => "0000000011010101", 422 => "1111111111010110", 
    423 => "0000000000000000", 424 => "0011000010011010", 425 => "0000000000000000", 
    426 => "0000000011110101", 427 => "0000000000000000", 428 => "0000000000000110", 
    429 to 431=> "0000000000000000", 432 => "0000000000100001", 433 => "0000000000000000", 
    434 => "1111111100001011", 435 => "0000000000000000", 436 => "1111111111110111", 
    437 to 439=> "0000000000000000", 440 => "1111111111100000", 441 => "0011000010101100", 
    442 => "1111111100001100", 443 => "0000000000000000", 444 => "0000000010010011", 
    445 => "0000000000000000", 446 => "0000000100111111", 447 => "0000000011100110", 
    448 => "1111111111010101", 449 => "0000000000000000", 450 => "0000000011110100", 
    451 => "0000000000000000", 452 => "1111111110000000", 453 => "0000000000000000", 
    454 => "1111111001111001", 455 => "1111111100101011", 456 => "0000000000101010", 
    457 => "0000000000000000", 458 => "0011000010011010", 459 => "0000000000000000", 
    460 => "1111111100001011", 461 => "0000000000000000", 462 => "1111111111111010", 
    463 to 465=> "0000000000000000", 466 => "1111111111011111", 467 => "0000000000000000", 
    468 => "0000000011110101", 469 => "0000000000000000", 470 => "0000000000001001", 
    471 to 473=> "0000000000000000", 474 => "0000000000100000", 475 => "0011000010101100", 
    476 => "0000000100101110", 477 => "0000000000000000", 478 => "1111111101001001", 
    479 => "0000000000000000", 480 => "1111111001111111", 481 => "1111111011100001", 
    482 => "0000000000110110", 483 => "0000000000000000", 484 => "1111111011010010", 
    485 => "0000000000000000", 486 => "0000000010100010", 487 => "0000000000000000", 
    488 => "0000000111011011", 489 => "0000000100001001", 490 => "1111111111001100", 
    491 => "0000000000000000", 492 => "0010100001110000", 493 => "0000000000000000", 
    494 => "0000000100101111", 495 => "0000000000000000", 496 => "0000000000001000", 
    497 to 499=> "0000000000000000", 500 => "0000000000101000", 501 => "0000000000000000", 
    502 => "1111111011010001", 503 => "0000000000000000", 504 => "1111111111110101", 
    505 to 507=> "0000000000000000", 508 => "1111111111011000", 509 => "0010100001010110", 
    510 => "1111111011010010", 511 => "0000000000000000", 512 => "0000000010110111", 
    513 => "0000000000000000", 514 => "0000000110000001", 515 => "0000000100011111", 
    516 => "1111111111001010", 517 => "0000000000000000", 518 => "0000000100101110", 
    519 => "0000000000000000", 520 => "1111111101011110", 521 => "0000000000000000", 
    522 => "1111111000100101", 523 => "1111111011110111", 524 => "0000000000110100", 
    525 => "0000000000000000", 526 => "0010100001110000", 527 => "0000000000000000", 
    528 => "1111111011010001", 529 => "0000000000000000", 530 => "1111111111111000", 
    531 to 533=> "0000000000000000", 534 => "1111111111011000", 535 => "0000000000000000", 
    536 => "0000000100101111", 537 => "0000000000000000", 538 => "0000000000001011", 
    539 to 541=> "0000000000000000", 542 => "0000000000101000", 543 => "0010100001010110", 
    544 => "0000000101100000", 545 => "0000000000000000", 546 => "1111111100101000", 
    547 => "0000000000000000", 548 => "1111111001001010", 549 => "1111111010101111", 
    550 => "0000000000111111", 551 => "0000000000000000", 552 => "1111111010100000", 
    553 => "0000000000000000", 554 => "0000000011000000", 555 => "0000000000000000", 
    556 => "0000001000100000", 557 => "0000000100111001", 558 => "1111111111000011", 
    559 => "0000000000000000", 560 => "0010001110110100", 561 => "0000000000000000", 
    562 => "0000000101100001", 563 => "0000000000000000", 564 => "0000000000001001", 
    565 to 567=> "0000000000000000", 568 => "0000000000101111", 569 => "0000000000000000", 
    570 => "1111111010011111", 571 => "0000000000000000", 572 => "1111111111110100", 
    573 to 575=> "0000000000000000", 576 => "1111111111010010", 577 => "0010001101110111", 
    578 => "1111111010100000", 579 => "0000000000000000", 580 => "0000000011011000", 
    581 => "0000000000000000", 582 => "0000000110110110", 583 => "0000000101010001", 
    584 => "1111111111000001", 585 => "0000000000000000", 586 => "0000000101100000", 
    587 => "0000000000000000", 588 => "1111111101000000", 589 => "0000000000000000", 
    590 => "1111110111100000", 591 => "1111111011000111", 592 => "0000000000111101", 
    593 => "0000000000000000", 594 => "0010001110110100", 595 => "0000000000000000", 
    596 => "1111111010011111", 597 => "0000000000000000", 598 => "1111111111110111", 
    599 to 601=> "0000000000000000", 602 => "1111111111010001", 603 => "0000000000000000", 
    604 => "0000000101100001", 605 => "0000000000000000", 606 => "0000000000001100", 
    607 to 609=> "0000000000000000", 610 => "0000000000101110", 611 => "0010001101110111", 
    612 => "0000000110001110", 613 => "0000000000000000", 614 => "1111111100001010", 
    615 => "0000000000000000", 616 => "1111111000011110", 617 => "1111111010000001", 
    618 => "0000000001001000", 619 => "0000000000000000", 620 => "1111111001110010", 
    621 => "0000000000000000", 622 => "0000000011011100", 623 => "0000000000000000", 
    624 => "0000001001011011", 625 => "0000000101100100", 626 => "1111111110111011", 
    627 => "0000000000000000", 628 => "0010000010010010", 629 => "0000000000000000", 
    630 => "0000000110001110", 631 => "0000000000000000", 632 => "0000000000001010", 
    633 to 635=> "0000000000000000", 636 => "0000000000110101", 637 => "0000000000000000", 
    638 => "1111111001110010", 639 => "0000000000000000", 640 => "1111111111110011", 
    641 to 643=> "0000000000000000", 644 => "1111111111001100", 645 => "0010000000110110", 
    646 => "1111111001110010", 647 => "0000000000000000", 648 => "0000000011110110", 
    649 => "0000000000000000", 650 => "0000000111100010", 651 => "0000000101111111", 
    652 => "1111111110111000", 653 => "0000000000000000", 654 => "0000000110001110", 
    655 => "0000000000000000", 656 => "1111111100100100", 657 => "0000000000000000", 
    658 => "1111110110100101", 659 => "1111111010011100", 660 => "0000000001000101", 
    661 => "0000000000000000", 662 => "0010000010010010", 663 => "0000000000000000", 
    664 => "1111111001110010", 665 => "0000000000000000", 666 => "1111111111110110", 
    667 to 669=> "0000000000000000", 670 => "1111111111001011", 671 => "0000000000000000", 
    672 => "0000000110001110", 673 => "0000000000000000", 674 => "0000000000001101", 
    675 to 677=> "0000000000000000", 678 => "0000000000110100", 679 => "0010000000110110" );
signal rai, rai_reg: read_address_type;
signal qi : std_logic_vector(READ_PORT_COUNT*DATA_WIDTH-1 downto 0);
begin
    -- Split read addresses
    process(ra)
        variable rat: std_logic_vector(ADDRESS_WIDTH-1 downto 0);
    begin
        for i in 0 to (READ_PORT_COUNT-1) loop
            for j in 0 to (ADDRESS_WIDTH-1) loop
                rat(j) := ra(i*ADDRESS_WIDTH+j);
            end loop;
            rai(i) <= rat;
        end loop;
    end process;

    -- guide read address using CE
    process(clk)
    begin
        if (clk'event and clk='1') then
            for i in 0 to (READ_PORT_COUNT-1) loop
                if (ce(i) = '1') then
                    rai_reg(i) <= rai(i);
                end if;
            end loop;
        end if;
    end process;

    process(rai_reg, mem)
        variable qt : std_logic_vector(DATA_WIDTH-1 downto 0);
        variable raitmp : std_logic_vector(ADDRESS_WIDTH downto 0);
        variable memidx : integer;
    begin
        for i in 0 to (READ_PORT_COUNT-1) loop
            raitmp(ADDRESS_WIDTH) := '0';
            raitmp(ADDRESS_WIDTH-1 downto 0) := rai_reg(i);
            memidx := CONV_INTEGER(raitmp);
            if (memidx >= WORD_COUNT) then
                qt := (others => '0');
            else 
                qt := mem(memidx);
            end if;
            for j in 0 to (DATA_WIDTH-1) loop
                qi(i*DATA_WIDTH+j) <= qt(j);
            end loop;
        end loop;
    end process;
    q <= qi;

end rtl;



library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_signed.all;


entity funeval_FGM_F_V is
generic (
    DataWidth : integer := 16;
    AddressRange : integer := 680;
    AddressWidth : integer := 10);
port (
    address0 : in STD_LOGIC_VECTOR (AddressWidth-1 DOWNTO 0);
    ce0 : in STD_LOGIC;
    q0 : out STD_LOGIC_VECTOR (DataWidth-1 DOWNTO 0);


    reset : in STD_LOGIC;
    clk : in STD_LOGIC);
end entity funeval_FGM_F_V;


architecture struct of funeval_FGM_F_V is
    signal mem_q : STD_LOGIC_VECTOR  (1 * DataWidth - 1 DOWNTO 0);
    signal mem_ra : STD_LOGIC_VECTOR  (1 * AddressWidth - 1 DOWNTO 0);
    signal mem_ce : STD_LOGIC_VECTOR  (1 - 1 DOWNTO 0);

begin
    core_inst : entity work.funeval_FGM_F_V_core
        generic map(
            READ_PORT_COUNT => 1,
            WRITE_PORT_COUNT => 1,
            DATA_WIDTH => DataWidth,
            ADDRESS_WIDTH => AddressWidth,
            WORD_COUNT => AddressRange)
        port map(
            q => mem_q,
            ra => mem_ra,
            ce => mem_ce,
            reset => reset,
            clk => clk);


    q0 <= mem_q( 1 * DataWidth - 1 DOWNTO 0 * DataWidth);


    mem_ra <= address0;

    mem_ce(0) <= ce0;





end architecture struct;
