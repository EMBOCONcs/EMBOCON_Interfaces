/*
 *    This file was auto-generated by ACADO Toolkit.
 *
 *    ACADO Toolkit -- A Toolkit for Automatic Control and Dynamic Optimization.
 *    Copyright (C) 2008-2011 by Boris Houska, Hans Joachim Ferreau et al., K.U.Leuven.
 *    Developed within the Optimization in Engineering Center (OPTEC) under
 *    supervision of Moritz Diehl. All rights reserved.
 *
 */


#include <stdio.h>
#include <math.h>
#include <time.h>
#include <sys/stat.h>
#include <sys/time.h>

#ifndef ACADO_H
#define ACADO_H

#ifndef __MATLAB__
#ifdef __cplusplus
extern "C"
{
#endif
#endif
#include "qpoases/solver.hpp"


/* COMMON DEFINITIONS:              */
/* -------------------------------- */




/* Number of control intervals */
#define ACADO_N   20
/* Number of differential states */
#define ACADO_NX  22
/* Number of differential state derivatives */
#define ACADO_NDX  0
/* Number of algebraic states */
#define ACADO_NXA  0
/* Number of controls */
#define ACADO_NU  4
/* Number of parameters */
#define ACADO_NP  0
/* Number of output functions */
#define NUM_OUTPUTS  0


/* GLOBAL VARIABLES:                */
/* -------------------------------- */
typedef struct ACADOvariables_ {
int resetIntegrator;

/* Matrix of size: 21 x 22 (row major format) */
real_t x[ 462 ];

/* Matrix of size: 20 x 4 (row major format) */
real_t u[ 80 ];

/* Matrix of size: 20 x 22 (row major format) */
real_t xRef[ 440 ];

/* Matrix of size: 20 x 4 (row major format) */
real_t uRef[ 80 ];


} ACADOvariables;


/* GLOBAL WORKSPACE:                */
/* -------------------------------- */
typedef struct ACADOworkspace_ {
real_t rk_dim44_swap;

/* Row vector of size: 44 */
int rk_dim44_perm[ 44 ];

/* Row vector of size: 44 */
real_t rk_dim44_bPerm[ 44 ];

/* Row vector of size: 5180 */
real_t acado_aux[ 5180 ];

real_t rk_ttt;

/* Column vector of size: 26 */
real_t rk_xxx[ 26 ];

/* Matrix of size: 2 x 22 (row major format) */
real_t rk_kkk[ 44 ];

/* Matrix of size: 44 x 44 (row major format) */
real_t rk_A[ 1936 ];

/* Column vector of size: 44 */
real_t rk_b[ 44 ];

/* Column vector of size: 22 */
real_t rk_rhsTemp[ 22 ];

/* Matrix of size: 2 x 572 (row major format) */
real_t rk_diffsTemp[ 1144 ];

/* Matrix of size: 22 x 26 (row major format) */
real_t rk_diffsPrev[ 572 ];

/* Matrix of size: 22 x 26 (row major format) */
real_t rk_diffsNew[ 572 ];

/* Column vector of size: 598 */
real_t state[ 598 ];

/* Row vector of size: 80 */
real_t g1[ 80 ];

/* Matrix of size: 22 x 80 (row major format) */
real_t H01[ 1760 ];

/* Matrix of size: 80 x 80 (row major format) */
real_t H11[ 6400 ];

/* Row vector of size: 180 */
real_t lbA[ 180 ];

/* Row vector of size: 180 */
real_t ubA[ 180 ];

/* Row vector of size: 22 */
real_t deltaX0[ 22 ];

/* Matrix of size: 440 x 22 (row major format) */
real_t C[ 9680 ];

/* Matrix of size: 440 x 22 (row major format) */
real_t QC[ 9680 ];

/* Matrix of size: 22 x 22 (row major format) */
real_t Gx[ 484 ];

/* Matrix of size: 440 x 80 (row major format) */
real_t E[ 35200 ];

/* Matrix of size: 440 x 80 (row major format) */
real_t QE[ 35200 ];

/* Matrix of size: 22 x 4 (row major format) */
real_t Gu[ 88 ];

/* Matrix of size: 20 x 22 (row major format) */
real_t Dx[ 440 ];

/* Row vector of size: 440 */
real_t QDx[ 440 ];

/* Matrix of size: 20 x 4 (row major format) */
real_t Du[ 80 ];

/* Matrix of size: 20 x 4 (row major format) */
real_t RDu[ 80 ];


} ACADOworkspace;


/* GLOBAL FORWARD DECLARATIONS:          */
/* ------------------------------------- */
void integrate( real_t* rk_eta );
void solve_dim44_system( real_t* A, real_t* b );
void solve_dim44_triangular( real_t* A, real_t* b );
void solve_dim44_system_reuse( real_t* A, real_t* b );
void acado_rhs( real_t*, real_t* );
void acado_diffs( real_t*, real_t* );
void condense1( int index, real_t* yy );
void condense2(  );
void setupQP(  );
void multiplyQC1( real_t* C1, real_t* QC1 );
void multiplyQE1( real_t* E1, real_t* QE1 );
void multiplyQDX1( real_t* Dx1, real_t* QDx1 );
void multiplyRDU1( real_t* Du1, real_t* RDu1 );
void multiplyQC2( real_t* C1, real_t* QC1 );
void multiplyQE2( real_t* E1, real_t* QE1 );
void multiplyQDX2( real_t* Dx1, real_t* QDx1 );
void multiplyC( real_t* Gx, real_t* C1, real_t* C1_new );
void multiplyE( real_t* Gx, real_t* E1, real_t* E1_new );
void multiplyG1( real_t* E, real_t* QDx, real_t* g1 );
void multiplyH01( real_t* C, real_t* QE, real_t* H01 );
void multiplyH11( real_t* E, real_t* QE, real_t* H11 );
real_t getObjectiveValue(  );
void preparationStep(  );
void initialValueEmbedding(  );
int feedbackStep( real_t* x0 );
void shiftControls( real_t* uEnd );
void shiftStates( real_t* xEnd );
real_t getKKT(  );
real_t* getAcadoVariablesX(  );
real_t* getAcadoVariablesU(  );
real_t* getAcadoVariablesXRef(  );
real_t* getAcadoVariablesURef(  );
void printStates(  );
void printControls(  );
real_t getTime(  );
void printHeader(  );
/* ------------------------------------- */


/* EXTERN DECLARATIONS:                  */
/* ------------------------------------- */
extern ACADOworkspace acadoWorkspace;
extern ACADOvariables acadoVariables;
/* ------------------------------------- */
#ifndef __MATLAB__
#ifdef __cplusplus

} /* extern "C" */
#endif
#endif
#endif

/* END OF FILE. */

